id: iridiumtx_freq_shift
label: freq_shift
category: '[iridiumtx]'

templates:
  imports: from gnuradio import iridiumtx
  make: iridiumtx.freq_shift(${sampling_freq}, ${offset}, ${ampl}, ${phase})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
    # static sptr make(double sampling_freq = 1000000.0,
    #                  double offset = 200000.0,
    #                  double ampl = 1.0,
    #                  float phase = 0.0);
- id: sampling_freq
  label: Sampling frequency
  dtype: float
  default: 1000000.0
- id: offset
  label: Offset
  dtype: float
  default: 200000.0
- id: ampl
  label: Amplitude
  dtype: float
  default: 1.0
- id: phase
  label: Phase
  dtype: float
  default: 0.0
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
- label: out
  domain: stream
  dtype: complex
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
